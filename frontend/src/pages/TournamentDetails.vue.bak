<template>
  <div class="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100">
      <!-- Loading / Not Found -->
    <div v-if="loading" class="flex items-center justify-center min-h-screen">
      <div class="text-center">
        <div class="inline-block animate-spin rounded-full h-12 w-12 border-4 border-indigo-500 border-t-transparent mb-4"></div>
        <p class="text-gray-600 font-medium">Loading tournament...</p>
      </div>
    </div>
    
    <div v-else-if="!tournament" class="flex items-center justify-center min-h-screen">
      <div class="text-center">
        <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-red-100 to-pink-100 flex items-center justify-center">
          <svg class="w-12 h-12 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
        </div>
        <h3 class="text-xl font-semibold text-gray-900 mb-2">Tournament not found</h3>
        <p class="text-gray-600">The tournament you're looking for doesn't exist or has been removed.</p>
      </div>
    </div>

    <div v-else class="max-w-7xl mx-auto">
      <!-- Hero Section -->
      <div class="relative overflow-hidden">
        <!-- Background with banner -->
        <div class="absolute inset-0 bg-gradient-to-r from-indigo-600 via-purple-600 to-pink-600">
          <div v-if="tournament.bannerUrl" class="absolute inset-0 opacity-20">
            <img :src="tournament.bannerUrl" alt="Banner" class="w-full h-full object-cover" />
          </div>
        </div>
        
        <!-- Hero Content -->
        <div class="relative px-4 sm:px-6 lg:px-8 py-2">
          <div class="max-w-4xl mx-auto">
            <!-- Tournament Header -->
            <div class="flex flex-col lg:flex-row lg:items-start lg:justify-between gap-8">
              <div class="flex-1">
                <!-- Status and Format Badges -->
                <div class="flex flex-wrap items-center gap-3 mb-2">
                  <span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-semibold bg-white/20 backdrop-blur-sm ring-1 ring-white/30">
                    <span class="w-2 h-2 rounded-full mr-2" :class="statusDotClass(tournament.status)"></span>
                    {{ tournament.status }}
                  </span>
                  <span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-semibold bg-white/20 backdrop-blur-sm ring-1 ring-white/30">
                    {{ prettyFormat }}
                  </span>
                  <span v-if="tournament.matchFormat" class="inline-flex items-center px-4 py-2 rounded-full text-sm font-semibold bg-white/20 backdrop-blur-sm ring-1 ring-white/30">
                    {{ tournament.matchFormat }}
                  </span>
                  <span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-medium bg-white/10 backdrop-blur-sm">
                    {{ fmtDate(tournament.startDate) }} - {{ fmtDate(tournament.endDate) }}
                  </span>
                </div>
                
                <!-- Tournament Title -->
                <h1 class="text-xl lg:text-2xl font-black tracking-tight text-white mb-2">
                  {{ tournament.name }}
                </h1>
                
                <!-- Tournament Info -->
                <div class="flex flex-wrap items-center gap-6 text-white/90">
                  <div v-if="tournament.district" class="flex items-center gap-2">
                    <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5S10.62 6.5 12 6.5s2.5 1.12 2.5 2.5S13.38 11.5 12 11.5z"/>
                    </svg>
                    <span class="font-semibold">{{ tournament.district }}</span>
              </div>
                  <div v-if="venueCount" class="flex items-center gap-2">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
                    </svg>
                    <span>{{ venueCount }} venues</span>
                  </div>
                  <div v-if="participants.length" class="flex items-center gap-2">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"/>
                    </svg>
                    <span>{{ participants.length }} teams</span>
                  </div>
                </div>
              </div>
              
              <!-- Action Buttons -->
              <div class="flex flex-wrap items-center gap-3">
                <!-- User Actions -->
                <button @click="toggleFavorite" 
                        class="group relative inline-flex items-center gap-2 px-6 py-3 bg-white/20 backdrop-blur-sm text-white rounded-xl font-semibold hover:bg-white/30 transition-all duration-200">
                  <span v-if="isFav" class="text-yellow-400">★</span>
                  <span v-else class="text-white/70">☆</span>
                  <span>Favorite</span>
                </button>
                
                <button @click="share" 
                        class="group relative inline-flex items-center gap-2 px-6 py-3 bg-white/20 backdrop-blur-sm text-white rounded-xl font-semibold hover:bg-white/30 transition-all duration-200">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"/>
                  </svg>
                  <span>Share</span>
                </button>
                
                <!-- Admin Actions -->
                <div v-if="isAdmin" class="flex flex-wrap items-center gap-1">
                  <button @click="syncStatuses" :disabled="syncing"
                          class="px-3 py-1.5 bg-gray-200 text-gray-700 rounded-lg text-sm font-medium hover:bg-gray-300 transition-colors disabled:opacity-60">
                    {{ syncing ? 'Syncing…' : 'Sync' }}
                  </button>
                  <button v-if="!tournament.fixturesGenerated && tournament.status === 'open'" 
                          @click="closeRegs" 
                          class="px-3 py-1.5 bg-yellow-500 text-white rounded-lg text-sm font-medium hover:bg-yellow-600 transition-colors">
                    Close Reg
                  </button>
                  
                  <button v-if="!tournament.fixturesGenerated && tournament.status !== 'open' && !['cancelled','completed'].includes(tournament.status)" 
                          @click="openRegs" 
                          class="px-3 py-1.5 bg-green-500 text-white rounded-lg text-sm font-medium hover:bg-green-600 transition-colors">
                    Open Reg
                  </button>
                  
                  <button v-if="!tournament.fixturesGenerated && tournament.status === 'upcoming'" 
                          @click="openGenerateModal" 
                          class="px-3 py-1.5 bg-indigo-500 text-white rounded-lg text-sm font-medium hover:bg-indigo-600 transition-colors">
                    Generate
                  </button>
                  
                  <button v-if="tournament.fixturesGenerated" 
                          @click="deleteFixtures" 
                          class="px-3 py-1.5 bg-red-500 text-white rounded-lg text-sm font-medium hover:bg-red-600 transition-colors">
                    Delete
                  </button>
                  
                  <button @click="beginEdit" 
                          class="px-3 py-1.5 bg-white/20 backdrop-blur-sm text-white rounded-lg text-sm font-medium hover:bg-white/30 transition-colors">
                    Edit
                  </button>
                  
                  <button @click="cancelTournament" 
                          class="px-3 py-1.5 bg-red-500/80 backdrop-blur-sm text-white rounded-lg text-sm font-medium hover:bg-red-500 transition-colors">
                    Cancel
                  </button>
                </div>
              </div>
            </div>

            <!-- Key Metrics -->
            <div class="mt-12 grid grid-cols-2 md:grid-cols-4 gap-4">
              <div class="bg-white/10 backdrop-blur-sm rounded-2xl p-6 ring-1 ring-white/20 hover:bg-white/20 transition-all duration-200">
                <div class="flex items-center gap-3 mb-2">
                  <div class="w-8 h-8 rounded-lg bg-white/20 flex items-center justify-center">
                    <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                    </svg>
              </div>
                  <div class="text-sm text-white/70 font-medium">Matches</div>
              </div>
                <div class="text-3xl font-bold text-white">{{ matches.length }}</div>
              </div>
              
              <div class="bg-white/10 backdrop-blur-sm rounded-2xl p-6 ring-1 ring-white/20 hover:bg-white/20 transition-all duration-200">
                <div class="flex items-center gap-3 mb-2">
                  <div class="w-8 h-8 rounded-lg bg-white/20 flex items-center justify-center">
                    <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"/>
                    </svg>
              </div>
                  <div class="text-sm text-white/70 font-medium">Teams</div>
            </div>
                <div class="text-3xl font-bold text-white">{{ participants.length }}</div>
          </div>
              
              <div class="bg-white/10 backdrop-blur-sm rounded-2xl p-6 ring-1 ring-white/20 hover:bg-white/20 transition-all duration-200">
                <div class="flex items-center gap-3 mb-2">
                  <div class="w-8 h-8 rounded-lg bg-white/20 flex items-center justify-center">
                    <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
                    </svg>
                  </div>
                  <div class="text-sm text-white/70 font-medium">Venues</div>
                </div>
                <div class="text-3xl font-bold text-white">{{ venueCount }}</div>
        </div>

              <div class="bg-white/10 backdrop-blur-sm rounded-2xl p-6 ring-1 ring-white/20 hover:bg-white/20 transition-all duration-200">
                <div class="flex items-center gap-3 mb-2">
                  <div class="w-8 h-8 rounded-lg bg-white/20 flex items-center justify-center">
                    <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                    </svg>
                  </div>
                  <div class="text-sm text-white/70 font-medium">Duration</div>
                </div>
                <div class="text-3xl font-bold text-white">{{ durationDays }} days</div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Main Content -->
      <div class="px-4 sm:px-6 lg:px-8 py-8">
        <!-- Navigation Tabs -->
        <div class="bg-white rounded-2xl shadow-xl border border-gray-100 overflow-hidden">
          <div class="border-b border-gray-200">
            <nav class="flex flex-wrap gap-1 p-2">
              <button @click="activeTab = 'overview'" 
                      :class="tabClass('overview')" 
                      class="group relative px-6 py-3 rounded-xl text-sm font-semibold transition-all duration-200">
                <div class="flex items-center gap-2">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
                  </svg>
                  <span>Overview</span>
                </div>
              </button>
              
              <button @click="activeTab = 'fixtures'" 
                      :class="tabClass('fixtures')" 
                      class="group relative px-6 py-3 rounded-xl text-sm font-semibold transition-all duration-200">
                <div class="flex items-center gap-2">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                  </svg>
                  <span>Fixtures</span>
                  <span v-if="matches.length" class="px-2 py-0.5 bg-indigo-100 text-indigo-600 text-xs rounded-full">{{ matches.length }}</span>
                </div>
              </button>
              
              <button v-if="showTable" @click="activeTab = 'table'" 
                      :class="tabClass('table')" 
                      class="group relative px-6 py-3 rounded-xl text-sm font-semibold transition-all duration-200">
                <div class="flex items-center gap-2">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"/>
                  </svg>
                  <span>Standings</span>
                </div>
              </button>
              
              <button @click="activeTab = 'participants'" 
                      :class="tabClass('participants')" 
                      class="group relative px-6 py-3 rounded-xl text-sm font-semibold transition-all duration-200">
                <div class="flex items-center gap-2">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"/>
                  </svg>
                  <span>Participants</span>
                  <span v-if="participants.length" class="px-2 py-0.5 bg-green-100 text-green-600 text-xs rounded-full">{{ participants.length }}</span>
                </div>
              </button>
              
              <button v-if="hasBracket" @click="activeTab = 'bracket'" 
                      :class="tabClass('bracket')" 
                      class="group relative px-6 py-3 rounded-xl text-sm font-semibold transition-all duration-200">
                <div class="flex items-center gap-2">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/>
                  </svg>
                  <span>Bracket</span>
                </div>
              </button>
            </nav>
          </div>

          <!-- Tab Content -->
          <div class="p-6">
          <!-- OVERVIEW TAB -->
            <div v-if="activeTab === 'overview'" class="space-y-8">
              <div class="grid lg:grid-cols-3 gap-8">
                <!-- Main Content -->
                <div class="lg:col-span-2 space-y-8">
                  <!-- About Section -->
                  <div v-if="tournament.description" class="bg-gradient-to-br from-blue-50 to-indigo-50 rounded-2xl p-6 border border-blue-100">
                    <div class="flex items-center gap-3 mb-4">
                      <div class="w-10 h-10 rounded-xl bg-blue-500 flex items-center justify-center">
                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                        </svg>
                      </div>
                      <h3 class="text-xl font-bold text-gray-900">About This Tournament</h3>
                    </div>
                    <p class="text-gray-700 leading-relaxed">{{ tournament.description }}</p>
                  </div>

                  <!-- Registration/Payment Section for Club Managers -->
                  <div v-if="isClubManager && tournament.status === 'open'" class="bg-gradient-to-br from-emerald-50 to-green-50 rounded-2xl p-6 border border-emerald-100">
                    <div class="flex items-center gap-3 mb-4">
                      <div class="w-10 h-10 rounded-xl bg-emerald-500 flex items-center justify-center">
                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                        </svg>
                      </div>
                      <h3 class="text-xl font-bold text-gray-900">Tournament Registration</h3>
                    </div>
                    
                    <!-- Registration Status -->
                    <div v-if="myRegistration" class="mb-4">
                      <div class="flex items-center justify-between mb-2">
                        <span class="text-sm text-gray-600">Registration Status</span>
                        <span class="px-2 py-1 rounded-full text-xs font-semibold" 
                              :class="{
                                'bg-yellow-100 text-yellow-800': myRegistration.status === 'pending',
                                'bg-green-100 text-green-800': myRegistration.status === 'approved',
                                'bg-red-100 text-red-800': myRegistration.status === 'rejected'
                              }">
                          {{ myRegistration.status.charAt(0).toUpperCase() + myRegistration.status.slice(1) }}
                        </span>
                      </div>
                      
                      <!-- Payment Status (only show if approved) -->
                      <div v-if="myRegistration.status === 'approved'" class="flex items-center justify-between">
                        <span class="text-sm text-gray-600">Payment Status</span>
                        <span class="px-2 py-1 rounded-full text-xs font-semibold" 
                              :class="{
                                'bg-yellow-100 text-yellow-800': myRegistration.paymentStatus === 'pending',
                                'bg-green-100 text-green-800': myRegistration.paymentStatus === 'paid',
                                'bg-gray-100 text-gray-800': myRegistration.paymentStatus === 'not_required'
                              }">
                          {{ myRegistration.paymentStatus === 'not_required' ? 'Not Required' : 
                             myRegistration.paymentStatus.charAt(0).toUpperCase() + myRegistration.paymentStatus.slice(1) }}
                        </span>
                      </div>
                    </div>
                    
                    <!-- Registration Actions -->
                    <div v-if="!myRegistration" class="mb-4">
                      <button @click="registerForTournament" 
                              :disabled="registering"
                              class="w-full px-4 py-3 bg-emerald-600 text-white rounded-xl font-semibold hover:bg-emerald-700 transition-colors disabled:opacity-60">
                        {{ registering ? 'Registering...' : 'Register for Tournament' }}
                      </button>
                    </div>
                    
                    <!-- Payment Actions (only show if approved and payment pending) -->
                    <div v-else-if="myRegistration.status === 'approved' && myRegistration.paymentStatus === 'pending' && tournament.entryFee > 0" class="mb-4">
                      <div class="text-center mb-3">
                        <p class="text-sm text-gray-600 mb-1">Entry Fee: ₹{{ tournament.entryFee }}</p>
                        <p class="text-xs text-gray-500">Payment is required after admin approval</p>
                      </div>
                      <button @click="payEntryFee" 
                              :disabled="payLoading"
                              class="w-full px-4 py-3 bg-emerald-600 text-white rounded-xl font-semibold hover:bg-emerald-700 transition-colors disabled:opacity-60">
                        {{ payLoading ? 'Processing Payment...' : `Pay Entry Fee (₹${tournament.entryFee})` }}
                      </button>
                    </div>
                    
                    <!-- Registration Info -->
                    <div v-else-if="myRegistration.status === 'pending'" class="text-center py-3">
                      <p class="text-sm text-gray-600">Your registration is pending admin approval.</p>
                    </div>
                    
                    <div v-else-if="myRegistration.status === 'rejected'" class="text-center py-3">
                      <p class="text-sm text-gray-600">Your registration has been rejected.</p>
                      <p v-if="myRegistration.reason" class="text-xs text-red-600 mt-1">{{ myRegistration.reason }}</p>
                    </div>
                    
                    <div v-else-if="myRegistration.status === 'approved' && myRegistration.paymentStatus === 'paid'" class="text-center py-3">
                      <p class="text-sm text-gray-600">You are registered and payment has been completed.</p>
                    </div>
                    
                    <div v-else-if="myRegistration.status === 'approved' && myRegistration.paymentStatus === 'not_required'" class="text-center py-3">
                      <p class="text-sm text-gray-600">You are registered. No entry fee required.</p>
                    </div>
                  </div>

                  <!-- Rules Section -->
                  <div v-if="tournament.rules" class="bg-gradient-to-br from-amber-50 to-orange-50 rounded-2xl p-6 border border-amber-100">
                    <div class="flex items-center gap-3 mb-4">
                      <div class="w-10 h-10 rounded-xl bg-amber-500 flex items-center justify-center">
                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"/>
                        </svg>
                      </div>
                      <h3 class="text-xl font-bold text-gray-900">Rules & Regulations</h3>
                    </div>
                    <div class="prose prose-sm max-w-none text-gray-700">
                  <p class="whitespace-pre-line">{{ tournament.rules }}</p>
                </div>
                  </div>

                  <!-- Venues Section -->
                  <div v-if="Array.isArray(tournament.venues) && tournament.venues.length" class="bg-gradient-to-br from-green-50 to-emerald-50 rounded-2xl p-6 border border-green-100">
                    <div class="flex items-center gap-3 mb-4">
                      <div class="w-10 h-10 rounded-xl bg-green-500 flex items-center justify-center">
                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
                        </svg>
                </div>
                      <h3 class="text-xl font-bold text-gray-900">Venues</h3>
                      </div>
                    <div class="flex flex-wrap gap-3">
                      <span v-for="v in tournament.venues" :key="v" class="inline-flex items-center px-4 py-2 rounded-xl text-sm font-medium bg-white text-green-700 border border-green-200 shadow-sm">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                        </svg>
                        {{ v }}
                      </span>
                        </div>
                  </div>

                  <!-- Live Matches Section -->
                  <div class="bg-gradient-to-br from-red-50 to-pink-50 rounded-2xl p-6 border border-red-100">
                    <div class="flex items-center gap-3 mb-4">
                      <div class="w-10 h-10 rounded-xl bg-red-500 flex items-center justify-center">
                        <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"/>
                        </svg>
                      </div>
                      <h3 class="text-xl font-bold text-gray-900">Live Matches</h3>
                      <span v-if="liveMatches.length" class="px-3 py-1 bg-red-100 text-red-600 text-sm font-semibold rounded-full">
                        {{ liveMatches.length }} Live
                      </span>
                    </div>
                    
                    <div v-if="liveMatches.length === 0" class="text-center py-8">
                      <div class="w-16 h-16 mx-auto mb-4 rounded-full bg-gray-100 flex items-center justify-center">
                        <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
                        </svg>
                      </div>
                      <p class="text-gray-500 font-medium">No matches live at the moment</p>
                    </div>
                    
                    <div v-else class="grid md:grid-cols-2 gap-4">
                      <div v-for="m in liveMatches" :key="m._id" 
                           class="group bg-white rounded-xl border border-gray-200 p-4 hover:shadow-lg transition-all duration-200 cursor-pointer" 
                           @click="$router.push({ name: 'match-details', params: { id: route.params.id, matchId: m._id } })">
                        <div class="flex items-center justify-between mb-3">
                        <div class="flex items-center gap-2">
                            <div class="w-3 h-3 bg-red-500 rounded-full animate-pulse"></div>
                            <span class="text-sm font-bold text-red-600">LIVE</span>
                        </div>
                          <div class="text-sm text-gray-500">{{ m.venue || 'TBA' }}</div>
                      </div>
                        
                        <div class="flex items-center justify-between">
                          <div class="flex items-center gap-3">
                            <img v-if="m.homeClub?.logoUrl" :src="m.homeClub.logoUrl" class="w-8 h-8 rounded-full object-cover border-2 border-gray-200" />
                            <div v-else class="w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center">
                              <span class="text-xs font-bold text-gray-500">{{ clubName(m.homeClub).charAt(0) }}</span>
                    </div>
                            <span class="font-semibold text-gray-900">{{ clubName(m.homeClub) }}</span>
                  </div>
                          
                          <span class="text-gray-400 font-bold">VS</span>
                          
                          <div class="flex items-center gap-3">
                            <span class="font-semibold text-gray-900">{{ clubName(m.awayClub) }}</span>
                            <img v-if="m.awayClub?.logoUrl" :src="m.awayClub.logoUrl" class="w-8 h-8 rounded-full object-cover border-2 border-gray-200" />
                            <div v-else class="w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center">
                              <span class="text-xs font-bold text-gray-500">{{ clubName(m.awayClub).charAt(0) }}</span>
                </div>
              </div>
                </div>
                    </div>
                  </div>
                </div>
              </div>

                <!-- Sidebar -->
                <div class="space-y-6">
                  <!-- Quick Stats -->
                  <div class="bg-gradient-to-br from-indigo-50 to-purple-50 rounded-2xl p-6 border border-indigo-100">
                    <h3 class="text-lg font-bold text-gray-900 mb-4">Quick Stats</h3>
                    <div class="space-y-4">
                      <div class="flex items-center justify-between">
                        <span class="text-sm text-gray-600">Total Matches</span>
                        <span class="font-bold text-indigo-600">{{ matches.length }}</span>
                      </div>
                      <div class="flex items-center justify-between">
                        <span class="text-sm text-gray-600">Participating Teams</span>
                        <span class="font-bold text-indigo-600">{{ participants.length }}</span>
                      </div>
                      <div class="flex items-center justify-between">
                        <span class="text-sm text-gray-600">Entry Fee</span>
                        <span class="font-bold text-indigo-600">₹{{ tournament.entryFee || 0 }}</span>
                      </div>
                      <div class="flex items-center justify-between">
                        <span class="text-sm text-gray-600">Prize Pool</span>
                        <span class="font-bold text-indigo-600">₹{{ tournament.prizePool || 0 }}</span>
                      </div>
                      <div class="flex items-center justify-between">
                        <span class="text-sm text-gray-600">Max Teams</span>
                        <span class="font-bold text-indigo-600">{{ tournament.maxTeams }}</span>
                      </div>
                      <div v-if="tournament.matchFormat" class="flex items-center justify-between">
                        <span class="text-sm text-gray-600">Match Format</span>
                        <span class="font-bold text-indigo-600">{{ tournament.matchFormat }} ({{ tournament.oversLimit || 20 }} overs)</span>
                      </div>
                      <div v-if="tournament.restDaysMin !== undefined" class="flex items-center justify-between">
                        <span class="text-sm text-gray-600">Minimum Rest Days</span>
                        <span class="font-bold text-indigo-600">{{ tournament.restDaysMin }}</span>
                      </div>
                    </div>
                  </div>

                  <!-- Quick Standings Preview -->
                  <div v-if="showTable" class="bg-gradient-to-br from-green-50 to-emerald-50 rounded-2xl p-6 border border-green-100">
                    <div class="flex items-center justify-between mb-4">
                      <h3 class="text-lg font-bold text-gray-900">Standings</h3>
                      <button class="text-sm text-green-600 hover:text-green-700 font-semibold" @click="activeTab='table'">
                        View All →
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
</original_code>```

```
                      </button>
                    </div>
                    
                    <div v-if="standingsSorted.length === 0" class="text-center py-4">
                      <p class="text-sm text-gray-500">No standings yet</p>
                    </div>
                    
                    <div v-else class="space-y-3">
                      <div v-for="(row, idx) in standingsSorted.slice(0, 5)" :key="row.teamId" 
                           class="flex items-center justify-between p-3 bg-white rounded-xl border border-green-200">
                        <div class="flex items-center gap-3">
                          <div class="w-6 h-6 rounded-full bg-green-500 text-white text-xs font-bold flex items-center justify-center">
                            {{ idx + 1 }}
                          </div>
                          <span class="font-semibold text-gray-900">{{ row.teamName }}</span>
                        </div>
                        <div class="text-sm font-bold text-green-600">{{ row.points }} pts</div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
          </div>

          <!-- FIXTURES TAB -->
          <div v-if="activeTab === 'fixtures'" id="fixtures" class="p-6">
            <!-- Enhanced Filters -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-6 mb-8 border border-blue-100">
              <div class="flex flex-col lg:flex-row lg:items-center gap-4">
                <div class="flex-1">
                  <div class="relative">
                    <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <input v-model.trim="searchTerm" 
                           type="text" 
                           placeholder="Search teams, venues, or matches..." 
                           class="w-full pl-10 pr-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all" />
                  </div>
                </div>
                <div class="flex flex-wrap items-center gap-3">
                  <select v-model="statusFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                    <option value="all">All Status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Live">Live</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
              </select>
                  <select v-model="timeFilter" class="px-4 py-3 bg-white border border-gray-200 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all">
                <option value="upcoming">Upcoming</option>
                <option value="past">Past</option>
                    <option value="all">All Time</option>
              </select>
                </div>
              </div>
            </div>

            <!-- No Fixtures State -->
            <div v-if="fixturesGrouped.length === 0" class="text-center py-16">
              <div class="w-24 h-24 mx-auto mb-6 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
                </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2">No fixtures found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for updates.</p>
                      </div>

            <!-- Fixtures List -->
            <div v-else class="space-y-8">
              <div v-for="group in fixturesGrouped" :key="group.dateKey" class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
                <!-- Date Header -->
                <div class="bg-gradient-to-r from-indigo-500 to-purple-600 px-6 py-4">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 rounded-xl bg-white/20 flex items-center justify-center">
                      <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                      </svg>
                        </div>
                    <div>
                      <h3 class="text-lg font-bold text-white">{{ group.label }}</h3>
                      <p class="text-indigo-100 text-sm">{{ group.items.length }} matches</p>
                      </div>
                    </div>
                      </div>

                <!-- Matches Grid -->
                <div class="p-6">
                  <div class="grid md:grid-cols-2 xl:grid-cols-3 gap-6">
                    <div v-for="fx in group.items" :key="fx._id" 
                         class="group relative bg-white rounded-2xl shadow-lg border border-gray-100 hover:shadow-2xl hover:-translate-y-1 transition-all duration-300 cursor-pointer overflow-hidden"
                         @click="!isAdmin ? viewMatchDetails(fx) : null">
                      
                      <!-- Status Badge -->
                      <div class="absolute top-4 right-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold" :class="statusPillClass(fx.status)">
                          {{ fx.status || 'Scheduled' }}
                        </span>
                      </div>

                      <!-- Round Badge -->
                      <div class="absolute top-4 left-4 z-10">
                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold bg-indigo-100 text-indigo-700 border border-indigo-200">
                          {{ fx.round || fx.stage || 'Fixture' }}
                        </span>
                    </div>

                      <!-- Main Content -->
                      <div class="p-6 pt-16">

                        <!-- Teams Section -->
                        <div class="text-center mb-6">
                          <div class="flex items-center justify-center gap-6 mb-4">
                            <!-- Home Team -->
                            <div class="flex flex-col items-center">
                              <div class="w-14 h-14 rounded-2xl bg-gradient-to-br from-green-100 to-emerald-100 flex items-center justify-center mb-3 border-2 border-green-200 group-hover:scale-110 transition-transform duration-300">
                                <img v-if="fx.homeClub?.logoUrl" 
                                     :src="fx.homeClub.logoUrl" 
                                     class="w-12 h-12 rounded-xl object-cover object-center"
                                     :alt="clubName(fx.homeClub)"
                                     @error="$event.target.style.display='none'" />
                                <div v-if="!fx.homeClub?.logoUrl" class="w-12 h-12 bg-gradient-to-br from-green-500 to-emerald-600 rounded-xl flex items-center justify-center text-white font-bold text-lg">
                                  {{ clubName(fx.homeClub)?.charAt(0) }}
                                </div>
                              </div>
                              <div class="text-center">
                                <div class="font-bold text-gray-900 text-sm mb-1">{{ clubName(fx.homeClub) }}</div>
                                <div class="text-xs text-gray-500 bg-gray-100 px-2 py-0.5 rounded-full">Home</div>
                              </div>
                            </div>

                            <!-- VS Section -->
                            <div class="flex flex-col items-center">
                              <div class="w-10 h-10 rounded-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center mb-2">
                                <span class="text-sm font-bold text-gray-600">VS</span>
                              </div>
                            </div>

                            <!-- Away Team -->
                            <div class="flex flex-col items-center">
                              <div class="w-14 h-14 rounded-2xl bg-gradient-to-br from-blue-100 to-indigo-100 flex items-center justify-center mb-3 border-2 border-blue-200 group-hover:scale-110 transition-transform duration-300">
                                <img v-if="fx.awayClub?.logoUrl" 
                                     :src="fx.awayClub.logoUrl" 
                                     class="w-12 h-12 rounded-xl object-cover object-center"
                                     :alt="clubName(fx.awayClub)"
                                     @error="$event.target.style.display='none'" />
                                <div v-if="!fx.awayClub?.logoUrl" class="w-12 h-12 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-xl flex items-center justify-center text-white font-bold text-lg">
                                  {{ clubName(fx.awayClub)?.charAt(0) }}
                                </div>
                              </div>
                              <div class="text-center">
                                <div class="font-bold text-gray-900 text-sm mb-1">{{ clubName(fx.awayClub) }}</div>
                                <div class="text-xs text-gray-500 bg-gray-100 px-2 py-0.5 rounded-full">Away</div>
                              </div>
                            </div>
                          </div>
                        </div>
                          </div>
                        </div>

                        <!-- Match Details -->
                        <div class="space-y-3 mb-6">
                          <!-- Date & Time -->
                          <div class="flex items-center justify-center gap-2 p-3 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl border border-blue-100">
                            <div class="w-6 h-6 rounded-full bg-blue-500 flex items-center justify-center">
                              <svg class="w-3 h-3 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                              </svg>
                            </div>
                            <div class="text-center">
                              <div class="font-semibold text-gray-900 text-sm">
                        <span v-if="fx.date">{{ fmtDate(fx.date) }}</span>
                      </div>
                              <div v-if="fx.time" class="text-xs text-gray-600">{{ fx.time }}</div>
                    </div>
                  </div>
                          
                          <!-- Venue -->
                          <div v-if="fx.venue" class="flex items-center justify-center gap-2 p-3 bg-gradient-to-r from-green-50 to-emerald-50 rounded-xl border border-green-100">
                            <div class="w-6 h-6 rounded-full bg-green-500 flex items-center justify-center">
                              <svg class="w-3 h-3 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                              </svg>
                            </div>
                            <div class="text-center">
                              <div class="font-semibold text-gray-900 text-sm">{{ fx.venue }}</div>
                              <div class="text-xs text-gray-600">Match Venue</div>
                            </div>
                          </div>
                          
                          <!-- Match Format -->
                          <div v-if="tournament.matchFormat" class="flex items-center justify-center gap-2 p-3 bg-gradient-to-r from-purple-50 to-pink-50 rounded-xl border border-purple-100">
                            <div class="w-6 h-6 rounded-full bg-purple-500 flex items-center justify-center">
                              <svg class="w-3 h-3 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
                              </svg>
                            </div>
                            <div class="text-center">
                              <div class="font-semibold text-gray-900 text-sm">{{ tournament.matchFormat }}</div>
                              <div class="text-xs text-gray-600">{{ tournament.oversLimit || 20 }} overs</div>
                            </div>
                          </div>
                        </div>

                        <!-- Admin Actions -->
                        <div v-if="isAdmin" class="flex gap-2">
                          <button class="flex-1 px-3 py-2 bg-gray-100 text-gray-700 rounded-lg text-xs font-semibold hover:bg-gray-200 transition-all duration-300" @click.stop="viewMatchDetails(fx)">
                            <svg class="w-3 h-3 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/>
                            </svg>
                            View
                          </button>
                          <button class="flex-1 px-3 py-2 bg-indigo-100 text-indigo-700 rounded-lg text-xs font-semibold hover:bg-indigo-200 transition-all duration-300" @click.stop="openFixtureEditor(fx)">
                            <svg class="w-3 h-3 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                            </svg>
                            Edit
                          </button>
                          <button class="flex-1 px-3 py-2 bg-blue-100 text-blue-700 rounded-lg text-xs font-semibold hover:bg-blue-200 transition-all duration-300" @click.stop="$router.push({ name: 'admin-match-editor', params: { id: route.params.id, matchId: fx._id } })">
                            <svg class="w-3 h-3 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                            </svg>
                            Admin
                          </button>
                        </div>
                      </div>

                      <!-- Hover Effect -->
                      <div class="absolute inset-0 bg-gradient-to-r from-indigo-500/5 to-purple-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none"></div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <!-- Inline Fixture Editor Modal -->
            <div v-if="editFxOpen" class="fixed inset-0 bg-black/40 flex items-center justify-center z-50">
              <div class="bg-white rounded-xl shadow-xl w-full max-w-2xl p-5">
                <div class="flex items-center justify-between mb-3">
                  <h3 class="text-lg font-semibold">Edit Fixture</h3>
                  <button class="text-gray-500 hover:text-gray-700" @click="closeFixtureEditor">✕</button>
                </div>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-3 mb-3">
                  <div>
                    <label class="text-sm text-gray-600">Home Team</label>
                    <select v-model="editFxForm.homeClub" class="px-3 py-2 border rounded w-full">
                      <option value="">Select team</option>
                      <option v-for="t in participantOptions" :key="t.id" :value="t.id">{{ t.name }}</option>
                    </select>
                  </div>
                  <div>
                    <label class="text-sm text-gray-600">Away Team</label>
                    <select v-model="editFxForm.awayClub" class="px-3 py-2 border rounded w-full">
                      <option value="">Select team</option>
                      <option v-for="t in participantOptions" :key="t.id" :value="t.id">{{ t.name }}</option>
                    </select>
                  </div>
                </div>
                <div class="grid grid-cols-1 md:grid-cols-4 gap-3">
                  <div>
                    <label class="text-sm text-gray-600">Date</label>
                    <input v-model="editFxForm.date" type="date" class="px-3 py-2 border rounded w-full" />
                  </div>
                  <div>
                    <label class="text-sm text-gray-600">Time</label>
                    <select v-model="editFxForm.time" class="px-3 py-2 border rounded w-full">
                      <option value="">Select time</option>
                      <option v-for="s in timeSlotOptions" :key="s" :value="s">{{ s }}</option>
                    </select>
                  </div>
                  <div>
                    <label class="text-sm text-gray-600">Venue</label>
                    <select v-model="editFxForm.venue" class="px-3 py-2 border rounded w-full">
                      <option value="">Select venue</option>
                      <option v-for="v in venueOptions" :key="v" :value="v">{{ v }}</option>
                    </select>
                  </div>
                  <div class="flex items-end">
                    <label class="inline-flex items-center gap-2 text-sm text-gray-600">
                      <input type="checkbox" v-model="editFxForm.override" /> Override rules
                    </label>
                  </div>
                </div>
                <div class="flex items-center justify-end gap-2 mt-4">
                  <button class="btn" @click="closeFixtureEditor">Cancel</button>
                  <button class="btn-primary" @click="saveFixtureEdit" :disabled="savingEditFx">Save</button>
                </div>
              </div>
            </div>
          </div>

          <!-- TABLE TAB -->
          <div v-if="activeTab === 'table'" class="p-4 md:p-6">
            <template v-if="groupKeys.length > 1">
              <div class="grid grid-cols-1 gap-6">
                <div v-for="g in groupKeys" :key="g" class="rounded-2xl border shadow-sm overflow-hidden bg-white">
                  <div class="px-4 py-3 bg-gradient-to-r from-emerald-600 to-teal-600 text-white flex items-center justify-between">
                    <div class="text-sm font-semibold">{{ g || 'Group' }} Standings</div>
                    <div class="text-xs bg-white/20 px-2 py-0.5 rounded-full">{{ getStandingsSorted(g).length }} teams</div>
                  </div>
                  <div class="overflow-x-auto">
                    <table class="min-w-full">
                      <thead class="bg-gray-50 sticky top-0 z-10">
                        <tr class="text-left text-[11px] md:text-xs font-semibold text-gray-600 uppercase tracking-wide">
                          <th class="px-3 md:px-4 py-2">Pos</th>
                          <th class="px-3 md:px-4 py-2">Team</th>
                          <th class="px-3 md:px-4 py-2">P</th>
                          <th class="px-3 md:px-4 py-2">W</th>
                          <th class="px-3 md:px-4 py-2">L</th>
                          <th class="px-3 md:px-4 py-2">T/NR</th>
                          <th class="px-3 md:px-4 py-2">NRR</th>
                          <th class="px-3 md:px-4 py-2">Pts</th>
                          <th class="px-3 md:px-4 py-2">Form</th>
                        </tr>
                      </thead>
                      <tbody class="divide-y divide-gray-100">
                        <tr v-for="(row, idx) in getStandingsSorted(g)" :key="row.teamId" class="text-sm hover:bg-emerald-50/40">
                          <td class="px-3 md:px-4 py-2 text-gray-500">
                            <span class="inline-flex items-center justify-center w-6 h-6 rounded-full text-xs font-bold"
                                  :class="idx===0 ? 'bg-amber-100 text-amber-700' : idx===1 ? 'bg-slate-100 text-slate-700' : idx===2 ? 'bg-orange-100 text-orange-700' : 'bg-gray-100 text-gray-600'">
                              {{ idx+1 }}
                            </span>
                          </td>
                          <td class="px-3 md:px-4 py-2 font-medium">
                            <div class="flex items-center gap-2">
                              <span class="truncate">{{ row.teamName }}</span>
                            </div>
                          </td>
                          <td class="px-3 md:px-4 py-2">{{ row.played }}</td>
                          <td class="px-3 md:px-4 py-2 text-emerald-600 font-semibold">{{ row.won }}</td>
                          <td class="px-3 md:px-4 py-2 text-rose-600">{{ row.lost }}</td>
                          <td class="px-3 md:px-4 py-2">{{ row.tied + row.noResult }}</td>
                          <td class="px-3 md:px-4 py-2">{{ fmtNRR(row.nrr) }}</td>
                          <td class="px-3 md:px-4 py-2">
                            <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-semibold"
                                  :class="row.points > 0 ? 'bg-emerald-100 text-emerald-700' : 'bg-gray-100 text-gray-600'">
                              {{ row.points }}
                            </span>
                          </td>
                          <td class="px-3 md:px-4 py-2">
                            <div class="flex gap-1">
                              <span v-for="(r, i) in row.form" :key="i" class="w-2.5 h-2.5 rounded-full"
                                    :class="r==='W' ? 'bg-emerald-500' : r==='L' ? 'bg-rose-500' : 'bg-amber-400'"></span>
                            </div>
                          </td>
                        </tr>
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            </template>
            <template v-else>
              <div class="rounded-2xl border shadow-sm overflow-hidden bg-white">
                <div class="px-4 py-3 bg-gradient-to-r from-emerald-600 to-teal-600 text-white flex items-center justify-between">
                  <div class="text-sm font-semibold">Standings</div>
                  <div class="text-xs bg-white/20 px-2 py-0.5 rounded-full">{{ standingsByGroup.length }} teams</div>
                </div>
                <div class="overflow-x-auto">
                  <table class="min-w-full">
                    <thead class="bg-gray-50 sticky top-0 z-10">
                      <tr class="text-left text-[11px] md:text-xs font-semibold text-gray-600 uppercase tracking-wide">
                        <th class="px-3 md:px-4 py-2">Pos</th>
                        <th class="px-3 md:px-4 py-2">Team</th>
                        <th class="px-3 md:px-4 py-2">P</th>
                        <th class="px-3 md:px-4 py-2">W</th>
                        <th class="px-3 md:px-4 py-2">L</th>
                        <th class="px-3 md:px-4 py-2">T/NR</th>
                        <th class="px-3 md:px-4 py-2">NRR</th>
                        <th class="px-3 md:px-4 py-2">Pts</th>
                        <th class="px-3 md:px-4 py-2">Form</th>
                      </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-100">
                      <tr v-for="(row, idx) in standingsByGroup" :key="row.teamId" class="text-sm hover:bg-emerald-50/40">
                        <td class="px-3 md:px-4 py-2 text-gray-500">
                          <span class="inline-flex items-center justify-center w-6 h-6 rounded-full text-xs font-bold"
                                :class="idx===0 ? 'bg-amber-100 text-amber-700' : idx===1 ? 'bg-slate-100 text-slate-700' : idx===2 ? 'bg-orange-100 text-orange-700' : 'bg-gray-100 text-gray-600'">
                            {{ idx+1 }}
                          </span>
                        </td>
                        <td class="px-3 md:px-4 py-2 font-medium">
                          <div class="flex items-center gap-2">
                            <span class="truncate">{{ row.teamName }}</span>
                          </div>
                        </td>
                        <td class="px-3 md:px-4 py-2">{{ row.played }}</td>
                        <td class="px-3 md:px-4 py-2 text-emerald-600 font-semibold">{{ row.won }}</td>
                        <td class="px-3 md:px-4 py-2 text-rose-600">{{ row.lost }}</td>
                        <td class="px-3 md:px-4 py-2">{{ row.tied + row.noResult }}</td>
                        <td class="px-3 md:px-4 py-2">{{ fmtNRR(row.nrr) }}</td>
                        <td class="px-3 md:px-4 py-2">
                          <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-semibold"
                                :class="row.points > 0 ? 'bg-emerald-100 text-emerald-700' : 'bg-gray-100 text-gray-600'">
                            {{ row.points }}
                          </span>
                        </td>
                        <td class="px-3 md:px-4 py-2">
                          <div class="flex gap-1">
                            <span v-for="(r, i) in row.form" :key="i" class="w-2.5 h-2.5 rounded-full"
                                  :class="r==='W' ? 'bg-emerald-500' : r==='L' ? 'bg-rose-500' : 'bg-amber-400'"></span>
                          </div>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>
            </template>
          </div>

          <!-- PARTICIPANTS TAB -->
          <div v-if="activeTab === 'participants'" class="p-4 md:p-6">
            <div v-if="participants.length === 0" class="text-sm text-gray-500">No participants available yet.</div>
            <div v-else class="grid sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
              <div v-for="p in participants" :key="p._id || p.id" class="bg-white rounded-xl border p-4 hover:shadow transition">
                <div class="flex items-center gap-3">
                  <img v-if="p.logoUrl" :src="p.logoUrl" class="w-10 h-10 rounded-full object-cover" />
                  <div>
                    <div class="font-semibold text-gray-900">{{ p.clubName || p.name }}</div>
                    <div class="text-xs text-gray-500">{{ p.district || 'Kerala' }}</div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- BRACKET TAB -->
          <div v-if="activeTab === 'bracket'" class="p-4 md:p-6">
            <div v-if="!hasBracket" class="text-sm text-gray-500">No bracket rounds found.</div>
            <div v-else class="overflow-x-auto">
              <div class="min-w-[720px] grid grid-cols-3 gap-6">
                <div v-for="col in bracketColumns" :key="col.round" class="bg-gray-50 rounded-xl p-3 border">
                  <div class="text-sm font-semibold text-gray-700 mb-2">{{ col.title }}</div>
                  <div class="space-y-3">
                    <div v-for="m in col.matches" :key="m._id" class="bg-white rounded-lg border p-3 hover:shadow cursor-pointer" @click="$router.push({ name: 'match-details', params: { id: route.params.id, matchId: m._id } })">
                      <div class="text-[11px] text-gray-500 flex items-center justify-between">
                        <span>{{ m.matchCode || m.round || col.title }}</span>
                        <span>{{ fmtShortDate(m.date) }} {{ m.time || '' }}</span>
                      </div>
                      <div class="mt-1.5 space-y-1.5">
                        <div class="flex items-center justify-between" :class="isWinner(m, m.homeClub)? 'font-semibold text-gray-900' : 'text-gray-700'">
                          <span>{{ clubName(m.homeClub) }}</span>
                          <span class="text-xs" v-if="winnerId(m)"> {{ isWinner(m, m.homeClub)? 'WIN' : '' }} </span>
                        </div>
                        <div class="flex items-center justify-between" :class="isWinner(m, m.awayClub)? 'font-semibold text-gray-900' : 'text-gray-700'">
                          <span>{{ clubName(m.awayClub) }}</span>
                          <span class="text-xs" v-if="winnerId(m)"> {{ isWinner(m, m.awayClub)? 'WIN' : '' }} </span>
                        </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Admin Edit Modal -->
    <div v-if="isAdmin && editOpen" class="fixed inset-0 bg-black/30 flex items-center justify-center p-4">
      <div class="bg-white w-full max-w-2xl rounded-lg shadow-lg">
        <div class="px-4 py-3 border-b flex items-center justify-between">
          <h2 class="font-semibold text-gray-800">Edit Tournament</h2>
          <button class="text-gray-500" @click="editOpen = false">✕</button>
        </div>
        <form class="p-4 space-y-4" @submit.prevent="saveEdit">
          <div class="grid md:grid-cols-2 gap-4">
            <div>
              <label class="block text-sm font-medium">Tournament Name</label>
              <input v-model="editForm.name" type="text" required class="mt-1 w-full border rounded px-3 py-2" />
            </div>
            <div>
              <label class="block text-sm font-medium">Tournament Type</label>
              <select v-model="editForm.format" class="mt-1 w-full border rounded px-3 py-2">
                <option value="knockout">Knockout</option>
                <option value="league">League</option>
                <option value="round-robin">Round-robin</option>
                <option value="league+playoff">League+Playoff</option>
              </select>
            </div>
            <div>
              <label class="block text-sm font-medium">District</label>
              <input v-model="editForm.district" type="text" class="mt-1 w-full border rounded px-3 py-2" />
            </div>
            <div>
              <label class="block text-sm font-medium">Max Teams Allowed</label>
              <input v-model.number="editForm.maxTeams" type="number" min="2" class="mt-1 w-full border rounded px-3 py-2" />
            </div>
            <div>
              <label class="block text-sm font-medium">Start Date</label>
              <input v-model="editForm.startDate" type="date" required class="mt-1 w-full border rounded px-3 py-2" />
            </div>
            <div>
              <label class="block text-sm font-medium">End Date</label>
              <input v-model="editForm.endDate" type="date" required class="mt-1 w-full border rounded px-3 py-2" />
            </div>
            <div>
              <label class="block text-sm font-medium">Registration Deadline</label>
              <input v-model="editForm.registrationDeadline" type="date" class="mt-1 w-full border rounded px-3 py-2" />
            </div>
            <div>
              <label class="block text-sm font-medium">Entry Fee (INR)</label>
              <div class="relative">
                <span class="absolute left-3 top-2.5 text-gray-500">₹</span>
                <input v-model.number="editForm.entryFee" type="number" min="0" step="1" class="mt-1 w-full border rounded pl-7 pr-3 py-2" placeholder="0" />
              </div>
            </div>
            <div>
              <label class="block text-sm font-medium">Prize Pool (INR)</label>
              <div class="relative">
                <span class="absolute left-3 top-2.5 text-gray-500">₹</span>
                <input v-model.number="editForm.prizePool" type="number" min="0" step="1" class="mt-1 w-full border rounded pl-7 pr-3 py-2" placeholder="0" />
              </div>
            </div>
            <div>
              <label class="block text-sm font-medium">Match Format</label>
              <select v-model="editForm.matchFormat" class="mt-1 w-full border rounded px-3 py-2">
                <option value="T20">T20</option>
                <option value="ODI">ODI</option>
                <option value="Test">Test</option>
                <option value="T10">T10</option>
                <option value="Custom">Custom</option>
              </select>
            </div>
            <div>
              <label class="block text-sm font-medium">Overs Limit</label>
              <input v-model.number="editForm.oversLimit" type="number" min="1" class="mt-1 w-full border rounded px-3 py-2" />
            </div>
            <div>
              <label class="block text-sm font-medium">Minimum Rest Days</label>
              <input v-model.number="editForm.restDaysMin" type="number" min="0" class="mt-1 w-full border rounded px-3 py-2" />
            </div>
            <div class="md:col-span-2">
              <label class="block text-sm font-medium">Sponsor Information</label>
              <input v-model="editForm.sponsorInfo" type="text" class="mt-1 w-full border rounded px-3 py-2" placeholder="Enter sponsor details" />
            </div>
            <div class="md:col-span-2">
              <label class="block text-sm font-medium">Description</label>
              <textarea v-model="editForm.description" rows="3" class="mt-1 w-full border rounded px-3 py-2" placeholder="Brief overview of the tournament"></textarea>
            </div>
            <div class="md:col-span-2">
              <label class="block text-sm font-medium">Rules</label>
              <textarea v-model="editForm.rules" rows="4" class="mt-1 w-full border rounded px-3 py-2" placeholder="Key rules, eligibility, overs, player limits, dress code, fees, etc."></textarea>
            </div>
            <div class="md:col-span-2">
              <label class="block text-sm font-medium">Venues (comma separated)</label>
              <input v-model="editForm.venuesText" type="text" placeholder="Ground A, Ground B" class="mt-1 w-full border rounded px-3 py-2" />
            </div>
          </div>
          <div class="flex items-center justify-end gap-2 pt-2">
            <button type="button" @click="editOpen = false" class="px-4 py-2 rounded border">Cancel</button>
            <button type="submit" class="px-4 py-2 rounded bg-emerald-600 text-white hover:bg-emerald-700">Save</button>
          </div>
        </form>
      </div>
    </div>

    <!-- Generate Fixtures Modal -->
    <div v-if="isAdmin && showGenerateModal" class="fixed inset-0 bg-black/30 flex items-center justify-center p-4">
      <div class="bg-white w-full max-w-md rounded-lg shadow-lg">
        <div class="px-4 py-3 border-b flex items-center justify-between">
          <h2 class="font-semibold text-gray-800">Generate Fixtures</h2>
          <button class="text-gray-500" @click="showGenerateModal = false">✕</button>
        </div>
        <div class="p-4 space-y-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Tournament</label>
            <input class="w-full px-3 py-2 border rounded bg-gray-50" :value="tournament?.name" disabled />
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Format</label>
            <input class="w-full px-3 py-2 border rounded bg-gray-50" :value="tournament?.format" disabled />
          </div>
          <div v-if="tournament?.format === 'round-robin' || tournament?.format === 'league'" class="flex items-center gap-2">
            <input id="doubleRR" type="checkbox" v-model="gen.doubleRoundRobin" />
            <label for="doubleRR" class="text-sm">Double round robin</label>
          </div>
          <div v-if="tournament?.format === 'groups+knockouts' || tournament?.format === 'league+playoff'" class="grid grid-cols-2 gap-3">
            <div>
              <label class="block text-sm mb-1">Groups</label>
              <input v-model.number="gen.groups" type="number" min="2" class="w-full px-3 py-2 border rounded" />
            </div>
            <div>
              <label class="block text-sm mb-1">Qualify / group</label>
              <input v-model.number="gen.qualifyPerGroup" type="number" min="1" class="w-full px-3 py-2 border rounded" />
            </div>
          </div>
          <div class="flex items-center gap-2">
            <input id="respectRounds" type="checkbox" v-model="gen.respectRoundOrder" />
            <label for="respectRounds" class="text-sm">Respect round order (strict)</label>
          </div>
          <p v-if="genError" class="text-sm text-red-600">{{ genError }}</p>
          <div v-if="genDiag" class="text-xs text-gray-600 bg-gray-50 border rounded p-2">
            <div>Required matches: {{ genDiag.required }}</div>
            <div>Capacity (slots): {{ genDiag.capacity }}</div>
          </div>
        </div>
        <div class="px-4 py-3 border-t flex items-center justify-end gap-2">
          <button class="px-3 py-2 border rounded" @click="showGenerateModal = false">Cancel</button>
          <button class="px-3 py-2 bg-indigo-600 text-white rounded disabled:opacity-50" :disabled="genLoading" @click="generateNow">
            {{ genLoading ? 'Generating...' : 'Generate' }}
          </button>
        </div>
      </div>
    </div>

  </div>
</template>

<script setup>
import { ref, onMounted, onBeforeUnmount, computed, watch } from 'vue';
import { useRoute, useRouter } from 'vue-router';
import { useAuthStore } from '../store/auth';
import api from '../utils/api';
// FixtureDraw import removed

const route = useRoute();
const router = useRouter();
const auth = useAuthStore();
const loading = ref(true);
const tournament = ref(null);
const matches = ref([]);
const participants = ref([]);
const registrations = ref([]);
const activeTab = ref('overview');

const isAdmin = computed(() => auth.userProfile?.role === 'admin');
const isClubManager = computed(() => auth.userProfile?.role === 'clubManager');
const payLoading = ref(false);
const registering = ref(false);
const showRegistrationSuccess = ref(false);
const syncing = ref(false);

// Get current user's registration status
const myRegistration = computed(() => {
  if (!isClubManager.value || !tournament.value || !auth.userProfile?.managedClub) return null;
  
  const myClubId = auth.userProfile.managedClub;
  const registration = tournament.value.registrations?.find(reg => {
    // Handle both populated and non-populated club references
    const regClubId = reg.club?._id || reg.club?.id || reg.club;
    return String(regClubId) === String(myClubId);
  });
  
  return registration || null;
});

// Animated draw state
// Fixture draw variables removed

async function payEntryFee(){
  try{
    if (!tournament.value?._id) return;
    payLoading.value = true;

    // Create order
    const { data } = await api.post('/payments/orders', { tournamentId: tournament.value._id });
    const { keyId, order, amount, currency } = data;
    // Load Razorpay Checkout script if not present
    if (!window.Razorpay) {
      await new Promise((resolve, reject) => {
        const s = document.createElement('script');
        s.src = 'https://checkout.razorpay.com/v1/checkout.js';
        s.onload = resolve; s.onerror = reject; document.body.appendChild(s);
      });
    }
    const options = {
      key: keyId,
      amount,
      currency,
      name: tournament.value.name,
      description: 'Tournament Entry Fee',
      order_id: order.id,
      prefill: { name: auth.userProfile?.name, email: auth.user?.email },
      theme: { color: '#059669' },
      handler: async function (response){
        try{
          await api.post('/payments/verify', {
            tournamentId: tournament.value._id,
            razorpay_order_id: response.razorpay_order_id,
            razorpay_payment_id: response.razorpay_payment_id,
            razorpay_signature: response.razorpay_signature
          });

          // Reload tournament data to reflect payment status
          await loadAll(tournament.value._id);

          // Show registration success modal
          showRegistrationSuccess.value = true;

        }catch(err){
          alert(err?.response?.data?.message || 'Payment verification failed. Please contact support.');
        }
      },
      modal: { ondismiss: function(){ payLoading.value = false; } }
    };
    const rzp = new window.Razorpay(options);
    rzp.open();
  }catch(err){
    // Surface detailed backend error to help diagnose (e.g., invalid key, network error)
    const detail = err?.response?.data?.detail;
    const msg = err?.response?.data?.message || err.message || 'Failed to initiate payment';
    alert(detail ? `${msg}: ${detail}` : msg);
    console.error('Payment init error:', err?.response?.data || err);
  }finally{
    setTimeout(() => { payLoading.value = false; }, 600);
  }
}

async function registerForTournament() {
  if (!tournament.value?._id) return;
  
  try {
    registering.value = true;
    await api.post(`/tournaments/${tournament.value._id}/register`);
    await loadAll(tournament.value._id);
    alert('Registration submitted successfully. Please wait for admin approval.');
  } catch (err) {
    alert(err?.response?.data?.error || err?.response?.data?.message || 'Failed to register for tournament');
  } finally {
    registering.value = false;
  }
}

// Theme helpers
function statusDotClass(status){
  return status === 'cancelled' ? 'bg-rose-400' :
         status === 'open' ? 'bg-emerald-300' :
         status === 'ongoing' ? 'bg-amber-300' :
         status === 'completed' ? 'bg-emerald-300' :
         'bg-white/60';
}
function statusPillClass(status){
  return status === 'Live' ? 'px-2 py-0.5 rounded bg-emerald-50 text-emerald-700 border border-emerald-200' :
         status === 'Completed' ? 'px-2 py-0.5 rounded bg-gray-50 text-gray-700 border border-gray-200' :
         status === 'Cancelled' ? 'px-2 py-0.5 rounded bg-rose-50 text-rose-700 border border-rose-200' :
         'px-2 py-0.5 rounded bg-blue-50 text-blue-700 border border-blue-200';
}
function tabClass(name){
  return activeTab.value === name
    ? 'bg-gradient-to-r from-indigo-500 to-purple-500 text-white shadow-lg'
    : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50';
}

// Formatting
function fmtDate(d){ if(!d) return ''; return new Date(d).toLocaleDateString(); }
function fmtShortDate(d){ if(!d) return ''; const dt = new Date(d); return dt.toLocaleDateString(undefined,{ month:'short', day:'numeric' }); }
const prettyFormat = computed(() => (tournament.value?.format || '').replace(/\b\w/g, c => c.toUpperCase()));
const venueCount = computed(() => Array.isArray(tournament.value?.venues) ? tournament.value.venues.length : 0);
const durationDays = computed(() => {
  const s = tournament.value?.startDate; const e = tournament.value?.endDate;
  if (!s || !e) return 0; const diff = (new Date(e) - new Date(s));
  return Math.max(1, Math.round(diff / (1000*60*60*24)) + 1);
});

function clubName(c){
  // If populated object with name present
  if (c && typeof c === 'object' && (c.clubName || c.name)) return c.clubName || c.name;
  const id = String(c?._id || c?.id || c || '');
  const p = participantsMap?.value?.get ? participantsMap.value.get(id) : null;
  return (p?.clubName || p?.name) || 'Club';
}

// Favorite (server-backed per-account)
const isFav = ref(false);
async function loadFav(){
  try{
    const { data } = await api.get('/users/me/favorites');
    const list = (data.favoriteTournaments || []).map(String);
    isFav.value = list.includes(String(route.params.id));
  }catch{}
}
async function toggleFavorite(){
  try{
    const id = String(route.params.id);
    const { data } = await api.get('/users/me/favorites');
    const current = (data.favoriteTournaments || []).map(String);
    const action = current.includes(id) ? 'remove' : 'add';
    await api.post('/users/me/favorites', { type: 'tournament', id, action });
    isFav.value = action === 'add';
  }catch{}
}
function share(){
  const url = window.location.href;
  if (navigator.share) {
    navigator.share({ title: tournament.value?.name || 'Tournament', url }).catch(()=>{});
  } else {
    navigator.clipboard?.writeText(url);
    alert('Link copied to clipboard');
  }
}

// Admin-triggered status sync
async function syncStatuses(){
  if (!isAdmin.value) return;
  try{
    syncing.value = true;
    await api.post('/admin/tournaments/status-sync');
    const id = route.params.id;
    await loadAll(id);
  } catch(e){
    alert(e?.response?.data?.message || 'Status sync failed');
  } finally {
    syncing.value = false;
  }
}

// Data loading
async function loadAll(id){
  // Optional: warm from cache to avoid blank UI after refresh
  try{
    const cached = sessionStorage.getItem(`tournament:${id}`);
    if (cached && !tournament.value) {
      const obj = JSON.parse(cached);
      if (obj && obj._id) tournament.value = obj;
    }
  } catch {}

  // Load tournament immediately
  const tResp = await api.get(`/tournaments/${id}`);
  tournament.value = tResp.data;
  try{ sessionStorage.setItem(`tournament:${id}`, JSON.stringify(tResp.data)); } catch {}
  const regs = Array.isArray(tResp.data.registrations) ? tResp.data.registrations : [];
  const populatedParticipants = Array.isArray(tResp.data.participants) ? tResp.data.participants : [];
  const regsApproved = regs.filter(r => r.status === 'approved');
  const approvedClubs = regsApproved
    .map(r => (r && typeof r.club === 'object'
      ? r.club
      : populatedParticipants.find(p => String(p._id || p.id) === String(r.club))))
    .filter(Boolean);
  participants.value = approvedClubs.length ? approvedClubs : populatedParticipants;

  // Fire registrations and matches in parallel; do not block UI
  const tasks = [];
  if (isAdmin.value) {
    tasks.push(api.get(`/admin/tournaments/${id}/registrations`).then(r => { registrations.value = r.data; }).catch(() => { registrations.value = regs; }));
  }
  // Matches loader with separate state to avoid blocking
  loadingMatches.value = true;
  tasks.push(api.get(`/tournaments/${id}/matches`).then(m => { matches.value = m.data; }).finally(() => { loadingMatches.value = false; }));

  // Do not await here; let background tasks resolve without blocking initial render
  tasks.forEach(p => p.catch(()=>{}));
}

onMounted(async () => {
  try{
    const id = route.params.id;
    loadFav();
    await loadAll(id);
    
    // Check for hash navigation to fixtures
    if (window.location.hash === '#fixtures') {
      activeTab.value = 'fixtures';
      // Scroll to fixtures section after a short delay to ensure it's rendered
      setTimeout(() => {
        const fixturesElement = document.getElementById('fixtures');
        if (fixturesElement) {
          fixturesElement.scrollIntoView({ behavior: 'smooth' });
        }
      }, 100);
    }
  } finally {
    loading.value = false;
  }
});

// Lightweight periodic refresh to reflect live status changes
let refreshTimer = null;
onMounted(() => {
  refreshTimer = setInterval(async () => {
    try{
      const id = route.params.id;
      // Refresh matches only to reduce load
      loadingMatches.value = true;
      await api.get(`/tournaments/${id}/matches`).then(r => { matches.value = r.data; }).finally(() => { loadingMatches.value = false; });
    } catch(_) {}
  }, 60 * 1000); // every 60s
});
onBeforeUnmount(() => { if (refreshTimer) clearInterval(refreshTimer); refreshTimer = null; });

// Admin actions
async function updateReg(reg, action){
  if (!['approve','reject'].includes(action)) return;
  const id = route.params.id;
  await api.put(`/admin/tournaments/${id}/registrations/${reg._id}/${action}`);
  await loadAll(id);
}
async function openRegs(){
  const id = route.params.id;
  await api.put(`/admin/tournaments/${id}/open-registrations`);
  await loadAll(id);
}
async function closeRegs(){
  const id = route.params.id;
  await api.put(`/admin/tournaments/${id}/close-registrations`);
  await loadAll(id);
}
// Generate Fixtures state
const showGenerateModal = ref(false);
const gen = ref({ doubleRoundRobin: false, respectRoundOrder: true, groups: 2, qualifyPerGroup: 2 });
const genLoading = ref(false);
const genError = ref('');
const genDiag = ref(null);

function openGenerateModal() {
  gen.value = { doubleRoundRobin: false, respectRoundOrder: true, groups: 2, qualifyPerGroup: 2 };
  genError.value = '';
  genDiag.value = null;
  showGenerateModal.value = true;
}

async function generateNow() {
  if (!tournament.value) return;
  genLoading.value = true;
  genError.value = '';
  genDiag.value = null;
  try {
    const { data } = await api.post(`/admin/tournaments/${tournament.value._id}/fixtures/generate`, { ...gen.value });
    showGenerateModal.value = false;
    await loadAll(tournament.value._id);
  } catch (e) {
    genError.value = e?.response?.data?.message || 'Failed to generate fixtures';
    const diag = e?.response?.data?.diagnostics;
    if (diag) genDiag.value = diag;
  } finally {
    genLoading.value = false;
  }
}

async function deleteFixtures(){
  const id = route.params.id;
  if (!confirm('Delete all fixtures? This cannot be undone.')) return;
  try {
    // Ensure Authorization header is present (fallback to current idToken)
    let token = auth.idToken;
    try { if (!token && auth.user?.getIdToken) token = await auth.user.getIdToken(true); } catch {}
    // Only attach headers if we actually have a token to avoid passing undefined headers (breaks interceptor)
    const config = token ? { headers: { Authorization: `Bearer ${token}` } } : {};
    const { data } = await api.delete(`/admin/tournaments/${id}/fixtures`, config);
    // Safety: refresh data and verify local state cleared
    await loadAll(id);
    if (Array.isArray(matches.value) && matches.value.length > 0) {
      console.warn('Fixtures still present after delete:', matches.value.length);
      alert(`Tried to delete fixtures, but ${matches.value.length} match(es) still remain. Please refresh or try again.`);
    } else {
      // Ensure UI reflects deletion
      if (tournament.value) tournament.value.fixturesGenerated = false;
      // Optionally switch tab back to overview to avoid empty fixtures confusion
      activeTab.value = 'overview';
    }
  } catch (e) {
    console.error('Delete fixtures failed', e);
    alert(e?.response?.data?.message || 'Failed to delete fixtures');
  }
}
async function cancelTournament(){
  const id = route.params.id;
  if (!confirm('Cancel this tournament?')) return;
  await api.put(`/admin/tournaments/${id}/cancel`);
  await loadAll(id);
}

// Edit modal
const editOpen = ref(false);
const editForm = ref({ name: '', format: 'league', district: '', maxTeams: 16, startDate: '', endDate: '', registrationDeadline: '', entryFee: 0, description: '', rules: '', venuesText: '', prizePool: 0, sponsorInfo: '', matchFormat: 'T20', oversLimit: 20, restDaysMin: 1 });
function beginEdit(){
  const t = tournament.value; if (!t) return;
  editForm.value = {
    name: t.name || '',
    format: t.format || 'league',
    district: t.district || '',
    maxTeams: t.maxTeams || 16,
    startDate: t.startDate ? String(t.startDate).slice(0,10) : '',
    endDate: t.endDate ? String(t.endDate).slice(0,10) : '',
    registrationDeadline: t.registrationDeadline ? String(t.registrationDeadline).slice(0,10) : '',
    entryFee: Number(t.entryFee) || 0,
    prizePool: Number(t.prizePool) || 0,
    sponsorInfo: t.sponsorInfo || '',
    matchFormat: t.matchFormat || 'T20',
    oversLimit: Number(t.oversLimit) || 20,
    restDaysMin: Number(t.restDaysMin) || 1,
    description: t.description || '',
    rules: t.rules || '',
    venuesText: Array.isArray(t.venues) ? t.venues.join(', ') : ''
  };
  editOpen.value = true;
}
async function saveEdit(){
  const id = route.params.id;
  const payload = {
    name: editForm.value.name,
    format: editForm.value.format,
    district: editForm.value.district,
    maxTeams: editForm.value.maxTeams,
    startDate: editForm.value.startDate,
    endDate: editForm.value.endDate,
    registrationDeadline: editForm.value.registrationDeadline || undefined,
    entryFee: Number(editForm.value.entryFee) || 0,
    prizePool: Number(editForm.value.prizePool) || 0,
    sponsorInfo: editForm.value.sponsorInfo,
    matchFormat: editForm.value.matchFormat,
    oversLimit: Number(editForm.value.oversLimit) || 20,
    restDaysMin: Number(editForm.value.restDaysMin) || 1,
    description: editForm.value.description,
    rules: editForm.value.rules,
    venues: editForm.value.venuesText.split(',').map(s=>s.trim()).filter(Boolean)
  };
  await api.put(`/admin/tournaments/${id}`, payload);
  editOpen.value = false;
  await loadAll(id);
}

// Live matches
const liveMatches = computed(() => (matches.value || []).filter(m => m.status === 'Live'));

// Fixtures filtering and grouping
const searchTerm = ref('');
const statusFilter = ref('all'); // all | Scheduled | Live | Completed | Cancelled
const timeFilter = ref('all'); // upcoming | past | all (default to 'all' to avoid hiding past fixtures)
const loadingMatches = ref(false);

// Inline fixture editor state
const editFxOpen = ref(false);
const savingEditFx = ref(false);
const editFxForm = ref({ matchId: '', homeClub: '', awayClub: '', date: '', time: '', venue: '', override: false });
const timeSlotOptions = ref(['09:00','13:00','17:00']);
const venueOptions = computed(() => Array.isArray(tournament.value?.venues) ? tournament.value.venues : []);
const participantOptions = computed(() => {
  const regs = Array.isArray(tournament.value?.registrations) ? tournament.value.registrations : [];
  const approved = regs.filter(r => r.status === 'approved').map(r => r.club).filter(Boolean);
  const base = approved.length ? approved : (tournament.value?.participants || []);
  return base.map(p => ({ id: p._id || p, name: p.clubName || p.name || String(p) }));
});

function openFixtureEditor(fx){
  editFxForm.value = {
    matchId: fx._id,
    homeClub: fx.homeClub?._id || fx.homeClub || '',
    awayClub: fx.awayClub?._id || fx.awayClub || '',
    date: fx.date ? String(fx.date).slice(0,10) : '',
    time: fx.time || '',
    venue: fx.venue || '',
    override: false
  };
  editFxOpen.value = true;
}
function closeFixtureEditor(){ editFxOpen.value = false; }

async function saveFixtureEdit(){
  const id = route.params.id;
  const f = editFxForm.value;
  if (!f.homeClub || !f.awayClub) { alert('Select both teams'); return; }
  if (String(f.homeClub) === String(f.awayClub)) { alert('Home and away cannot be the same'); return; }
  if (!f.date || !f.time || !f.venue) { alert('Please fill date, time and venue'); return; }
  savingEditFx.value = true;
  try{
    await api.put(`/admin/tournaments/${id}/matches/${f.matchId}`, {
      homeClub: f.homeClub,
      awayClub: f.awayClub,
      date: f.date,
      time: f.time,
      venue: f.venue,
      allowedTimeSlots: timeSlotOptions.value,
      override: !!f.override
    });
    editFxOpen.value = false;
    await loadAll(id);
  } catch(e){
    alert(e?.response?.data?.message || 'Failed to update fixture');
  } finally {
    savingEditFx.value = false;
  }
}

const fixturesFiltered = computed(() => {
  const q = searchTerm.value.toLowerCase();
  const now = new Date();
  return (matches.value || []).filter(m => {
    if (statusFilter.value !== 'all' && (m.status || 'Scheduled') !== statusFilter.value) return false;
    if (timeFilter.value !== 'all') {
      const isPast = m.date ? new Date(m.date) < now : false;
      if (timeFilter.value === 'upcoming' && isPast) return false;
      if (timeFilter.value === 'past' && !isPast) return false;
    }
    if (!q) return true;
    const parts = [clubName(m.homeClub), clubName(m.awayClub), m.venue, m.round, m.stage].map(v => String(v||'').toLowerCase());
    return parts.some(v => v.includes(q));
  });
});

const fixturesGrouped = computed(() => {
  const byDate = {};
  for (const m of fixturesFiltered.value) {
    const key = m.date ? new Date(m.date).toDateString() : 'TBA';
    if (!byDate[key]) byDate[key] = [];
    byDate[key].push(m);
  }
  const groups = Object.keys(byDate).sort((a,b) => {
    if (a === 'TBA') return 1; if (b === 'TBA') return -1;
    return new Date(a) - new Date(b);
  }).map(k => ({
    dateKey: k,
    label: k === 'TBA' ? 'To be announced' : new Date(k).toLocaleDateString(undefined, { weekday:'long', month: 'long', day: 'numeric' }),
    items: byDate[k].sort((a,b) => (a.time||'').localeCompare(b.time||''))
  }));
  return groups;
});

// Standings
const participantsMap = computed(() => {
  const map = new Map();
  for (const p of (participants.value || [])) map.set(String(p._id || p.id), p);
  return map;
});

function ballsToOvers(b){ if(!b && b!==0) return 0; return b/6; }

function computeStandingsForGroup(groupKey){
  // Determine teams in this group
  let teams = (participants.value || []);
  if (groupKey) {
    const grp = (tournament.value?.groups || []).find(g => g.name === groupKey);
    const clubIds = new Set((grp?.clubs || []).map(x => String(x)));
    if (clubIds.size) {
      teams = teams.filter(p => clubIds.has(String(p._id || p.id)));
    }
  }

  const rows = teams.map(p => ({
    teamId: String(p._id || p.id),
    teamName: p.clubName || p.name || 'Club',
    group: groupKey || '',
    played: 0, won: 0, lost: 0, tied: 0, noResult: 0,
    runsFor: 0, ballsFaced: 0, runsAgainst: 0, ballsBowled: 0,
    points: 0, form: []
  }));
  const idx = new Map(rows.map(r => [r.teamId, r]));
  // Consider only matches within this group (if specified)
  const completed = (matches.value || []).filter(m => m.status === 'Completed' && (!groupKey || String(m.group||'') === groupKey));
  const chron = [...completed].sort((a,b) => new Date(a.date||0) - new Date(b.date||0));

  for (const m of chron) {
    const homeId = String(m.homeClub?._id || m.homeClub?.id || m.homeClub);
    const awayId = String(m.awayClub?._id || m.awayClub?.id || m.awayClub);
    const ri = m.innings || [];
    const hInns = ri.find(x => String(x.battingClub) === homeId);
    const aInns = ri.find(x => String(x.battingClub) === awayId);
    const rHome = hInns?.runs || 0; const bHome = hInns?.balls || 0;
    const rAway = aInns?.runs || 0; const bAway = aInns?.balls || 0;

    const home = idx.get(homeId); const away = idx.get(awayId);
    if (!home || !away) continue;

    home.played++; away.played++;
    home.runsFor += rHome; home.ballsFaced += bHome; home.runsAgainst += rAway; home.ballsBowled += bAway;
    away.runsFor += rAway; away.ballsFaced += bAway; away.runsAgainst += rHome; away.ballsBowled += bHome;

    const winner = String(m.result?.winner || '')
    const tie = !!m.result?.isTie; const noRes = !!m.result?.isNoResult;
    if (tie || noRes) {
      home.noResult += noRes ? 1 : 0; away.noResult += noRes ? 1 : 0;
      home.tied += tie ? 1 : 0; away.tied += tie ? 1 : 0;
      home.points += 1; away.points += 1;
      home.form.push('NR'); away.form.push('NR');
    } else if (winner === homeId) {
      home.won++; away.lost++; home.points += 2; home.form.push('W'); away.form.push('L');
    } else if (winner === awayId) {
      away.won++; home.lost++; away.points += 2; away.form.push('W'); home.form.push('L');
    }
    if (home.form.length > 5) home.form.shift();
    if (away.form.length > 5) away.form.shift();
  }

  for (const r of rows) {
    const forOvers = ballsToOvers(r.ballsFaced) || 0.0001;
    const agOvers = ballsToOvers(r.ballsBowled) || 0.0001;
    const nrrFor = r.runsFor / forOvers;
    const nrrAg = r.runsAgainst / agOvers;
    r.nrr = Number((nrrFor - nrrAg).toFixed(3));
  }
  return rows;
}

function fmtNRR(v){ if (v === 0) return '0.000'; if (!v) return '-'; return (v>0? '+':'') + Number(v).toFixed(3); }

const showTable = computed(() => String(tournament.value?.format || '').toLowerCase().includes('league') || matches.value.some(m => (m.group||'').length));

const groupKeys = computed(() => {
  const keys = new Set();
  // Prefer groups from matches
  for (const m of (matches.value || [])) if (m.group) keys.add(String(m.group));
  // Fallback to tournament.groups if matches lack group labels
  if (keys.size === 0 && Array.isArray(tournament.value?.groups)) {
    for (const g of tournament.value.groups) if (g?.name) keys.add(String(g.name));
  }
  const arr = Array.from(keys);
  if (arr.length === 0) arr.push('');
  return arr;
});
const activeGroup = ref('');
watch(groupKeys, (arr) => { if (arr.length && !arr.includes(activeGroup.value)) activeGroup.value = arr[0]; }, { immediate: true });

const standingsAll = computed(() => computeStandingsForGroup(activeGroup.value));
const standingsSorted = computed(() => [...standingsAll.value].sort((a,b) => b.points - a.points || b.nrr - a.nrr));
const standingsByGroup = computed(() => standingsSorted.value);

function getStandingsSorted(groupKey){
  const rows = computeStandingsForGroup(groupKey);
  return rows.sort((a,b) => b.points - a.points || b.nrr - a.nrr);
}

// Bracket
const hasBracket = computed(() => (matches.value || []).some(m => ['Quarterfinal','Semifinal','Final'].includes(m.round)) || (matches.value || []).some(m => m.stage && ['Knockout','Playoff','Final'].includes(m.stage)));

function winnerId(m){ return String(m.result?.winner || ''); }
function isWinner(m, club){ const id = String(club?._id || club?.id || club); return id && winnerId(m) === id; }

const bracketColumns = computed(() => {
  const rounds = [
    { key: 'Quarterfinal', title: 'Quarterfinals' },
    { key: 'Semifinal', title: 'Semifinals' },
    { key: 'Final', title: 'Final' }
  ];
  const byRound = (matches.value || []).reduce((acc, m) => {
    const k = m.round || (m.stage === 'Final' ? 'Final' : (m.stage === 'Knockout' ? 'Semifinal' : ''));
    if (!k) return acc; (acc[k] ||= []).push(m); return acc;
  }, {});
  return rounds.map(r => ({ round: r.key, title: r.title, matches: (byRound[r.key] || []).sort((a,b) => new Date(a.date||0) - new Date(b.date||0)) }));
});

function viewMatchDetails(match) {
  // Navigate to the new match details page
  router.push({ 
    name: 'match-details', 
    params: { 
      id: route.params.id, 
      matchId: match._id 
    } 
  });
}
</script>
```
